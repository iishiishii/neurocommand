name: Cleanup unused neurocontainers

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # every day at midnight UTC

jobs:
  cleanup_containers_simg:
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
    - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38
      with:
        python-version: 3.8
    - name: Configure AWS Credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722
      with:
        aws-region: us-east-2
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        output-credentials: true
        role-duration-seconds: 28800 # 8 hours
    - name : clean up containers
      env:
        AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
        OS_AUTH_URL: ${{ secrets.OS_AUTH_URL }}
        OS_PROJECT_NAME: ${{ secrets.OS_PROJECT_NAME }}
        OS_PROJECT_ID: ${{ secrets.OS_PROJECT_ID }}
        OS_USERNAME: ${{ secrets.OS_USERNAME }}
        OS_PASSWORD: ${{ secrets.OS_PASSWORD }}
        OS_APPLICATION_CREDENTIAL_ID: ${{ secrets.OS_APPLICATION_CREDENTIAL_ID }}
        OS_APPLICATION_CREDENTIAL_SECRET: ${{ secrets.OS_APPLICATION_CREDENTIAL_SECRET }}
        OS_AUTH_VERSION: ${{ secrets.OS_AUTH_VERSION }}
        OS_IDENTITY_API_VERSION: ${{ secrets.OS_IDENTITY_API_VERSION }}
      run: |
        if ! command -v rclone &> /dev/null; then
            echo "[DEBUG] Installing rclone"
            curl https://rclone.org/install.sh | sudo bash
        fi
        rclone config create aws-neurocontainers-new s3 config_is_local false provider AWS env_auth true
        rclone config create nectar swift env_auth true

        /bin/bash .github/workflows/cleanup_containers.sh